#The following shows how I've queried with multiple tables in order to display the relation between customer & order data.

#1. How many orders were placed in January?
SELECT COUNT(orderID) 
from BIT_DB.JanSales;

#2. How many of those orders were for an iPhone? 
SELECT COUNT(orderID) 
from BIT_DB.JanSales
WHERE product = 'iPhone';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT acctnum 
from BIT_DB.customers
    INNER JOIN BIT_DB.FebSales
        ON customers.order_id = FebSales.orderID;

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct product, price
from BIT_DB.JanSales
WHERE price in (SELECT MIN(price) from BIT_DB.JanSales);

#5. What is the total revenue for each product sold in January?
SELECT product, sum(quantity)*price as revenue
from BIT_DB.JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, sum(quantity) as total_sold, sum(quantity)*price as revenue
from BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT count(cust.acctnum), avg(quantity*price)
from BIT_DB.FebSales feb
    LEFT JOIN BIT_DB.customers cust
        ON feb.OrderID = cust.order_id
WHERE feb.quantity > 2;
